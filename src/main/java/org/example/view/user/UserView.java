/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package org.example.view.user;

import java.awt.*;
import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.sql.Time;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.LocalTime;
import java.time.format.DateTimeFormatter;
import java.util.*;
import java.util.List;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;

import org.example.controllers.BookingController;
import org.example.controllers.CategoryController;
import org.example.controllers.VenueController;
import org.example.dependencyInjection.BookingControllerFactory;
import org.example.dependencyInjection.CategoryControllerFactory;
import org.example.dependencyInjection.VenueControllerFactory;
import org.example.dtos.BookedVenuesResponse;
import org.example.dtos.BookingDetail;
import org.example.dtos.BookingRequest;
import org.example.dtos.VenueResponse;
import org.example.dtos.responses.BookingStatusDetail;
import org.example.exceptions.WarningException;
import org.example.models.Category;
import org.example.models.Venue;
import org.example.services.impl.ReportService;
import org.example.services.impl.UploadPhotoService;

/**
 *
 * @author fadhl
 */
public class UserView extends javax.swing.JFrame {
    private VenueControllerFactory venueFactory = new VenueControllerFactory();
    private CategoryControllerFactory categoryFactory = new CategoryControllerFactory();
    private BookingControllerFactory bookingFactory = new BookingControllerFactory();
    private VenueController venueController = venueFactory.controller();
    private CategoryController categoryController = categoryFactory.controller();
    private BookingController bookingController = bookingFactory.controller();
    private UploadPhotoService uploadPhotoService = new UploadPhotoService();
    private ReportService reportService =  new ReportService();
    Time start, end;
    String venueName, userId, bookingKode, fileName, fileNameLast;

    public UserView() {
        initComponents();
        txtUserId.setVisible(false);
        createTransactionContainer();
        listVenuesContainer();
        bookingStatusContainer();
        txtDateBooking.setMinSelectableDate(new Date());
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        BodyPanelUser = new javax.swing.JPanel();
        NavbarUserPanel = new javax.swing.JPanel();
        btnSeeVenues = new javax.swing.JButton();
        txtUsername = new javax.swing.JLabel();
        txtUserId = new javax.swing.JLabel();
        btnHome = new javax.swing.JButton();
        btnCreateBooking = new javax.swing.JButton();
        btnSeeStatus = new javax.swing.JButton();
        btnReportTransaction = new javax.swing.JButton();
        btnLogoutUser = new javax.swing.JButton();
        MainUserPanel = new javax.swing.JPanel();
        HomePanel = new javax.swing.JPanel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        lblWelcome = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        ListVenuesPanel = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblVenues = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        cbCategory = new javax.swing.JComboBox<>();
        btnGotoBooking = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        BookingTransactionPanel = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblBookedList = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        cbCategoryInput = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        cbVenue = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        txtDateBooking = new com.toedter.calendar.JDateChooser();
        jLabel8 = new javax.swing.JLabel();
        txtTotalPrice = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        cbStart = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        cbEnd = new javax.swing.JComboBox<>();
        jLabel11 = new javax.swing.JLabel();
        txtUploadPhoto = new javax.swing.JTextField();
        btnChoosePhoto = new javax.swing.JButton();
        btnSubmit = new javax.swing.JButton();
        btnAskPayment = new javax.swing.JButton();
        txtDateSearch = new com.toedter.calendar.JDateChooser();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        cbCategorySearch = new javax.swing.JComboBox<>();
        jLabel14 = new javax.swing.JLabel();
        btnReset = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        BookingStatusPanel = new javax.swing.JPanel();
        btnStruk = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblStatusBooking = new javax.swing.JTable();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        ReportTransactionPanel = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblReport = new javax.swing.JTable();
        jLabel19 = new javax.swing.JLabel();
        btnPrint = new javax.swing.JButton();
        cbYear = new javax.swing.JComboBox<>();
        cbMonth = new javax.swing.JComboBox<>();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Halaman Pengguna");

        BodyPanelUser.setBackground(new java.awt.Color(0, 102, 255));

        NavbarUserPanel.setBackground(new java.awt.Color(0, 102, 255));
        NavbarUserPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnSeeVenues.setBackground(new java.awt.Color(0, 102, 255));
        btnSeeVenues.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnSeeVenues.setForeground(new java.awt.Color(255, 255, 255));
        btnSeeVenues.setText("Lihat Daftar Lapangan");
        btnSeeVenues.setBorder(null);
        btnSeeVenues.setBorderPainted(false);
        btnSeeVenues.setContentAreaFilled(false);
        btnSeeVenues.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSeeVenues.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSeeVenuesActionPerformed(evt);
            }
        });
        NavbarUserPanel.add(btnSeeVenues, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 50, 166, 34));

        txtUsername.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        txtUsername.setForeground(new java.awt.Color(255, 255, 255));
        txtUsername.setText("Selamat datang ");
        NavbarUserPanel.add(txtUsername, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, -1, -1));

        txtUserId.setText("userId");
        NavbarUserPanel.add(txtUserId, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 50, 106, -1));

        btnHome.setBackground(new java.awt.Color(0, 102, 255));
        btnHome.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnHome.setForeground(new java.awt.Color(255, 255, 255));
        btnHome.setText("Beranda");
        btnHome.setBorder(null);
        btnHome.setBorderPainted(false);
        btnHome.setContentAreaFilled(false);
        btnHome.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnHome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHomeActionPerformed(evt);
            }
        });
        NavbarUserPanel.add(btnHome, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 58, 34));

        btnCreateBooking.setBackground(new java.awt.Color(0, 102, 255));
        btnCreateBooking.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnCreateBooking.setForeground(new java.awt.Color(255, 255, 255));
        btnCreateBooking.setText("Lakukan Pemesanan");
        btnCreateBooking.setBorder(null);
        btnCreateBooking.setBorderPainted(false);
        btnCreateBooking.setContentAreaFilled(false);
        btnCreateBooking.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnCreateBooking.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateBookingActionPerformed(evt);
            }
        });
        NavbarUserPanel.add(btnCreateBooking, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 50, 152, 34));

        btnSeeStatus.setBackground(new java.awt.Color(0, 102, 255));
        btnSeeStatus.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnSeeStatus.setForeground(new java.awt.Color(255, 255, 255));
        btnSeeStatus.setText("Status Pemesanan");
        btnSeeStatus.setBorder(null);
        btnSeeStatus.setBorderPainted(false);
        btnSeeStatus.setContentAreaFilled(false);
        btnSeeStatus.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSeeStatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSeeStatusActionPerformed(evt);
            }
        });
        NavbarUserPanel.add(btnSeeStatus, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 50, 144, 34));

        btnReportTransaction.setBackground(new java.awt.Color(0, 102, 255));
        btnReportTransaction.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnReportTransaction.setForeground(new java.awt.Color(255, 255, 255));
        btnReportTransaction.setText("Laporan Transaksi");
        btnReportTransaction.setBorder(null);
        btnReportTransaction.setBorderPainted(false);
        btnReportTransaction.setContentAreaFilled(false);
        btnReportTransaction.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnReportTransaction.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReportTransactionActionPerformed(evt);
            }
        });
        NavbarUserPanel.add(btnReportTransaction, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 50, 135, 34));

        btnLogoutUser.setBackground(new java.awt.Color(204, 204, 255));
        btnLogoutUser.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnLogoutUser.setIcon(new javax.swing.ImageIcon(getClass().getResource("/logout.png"))); // NOI18N
        btnLogoutUser.setText("Keluar");
        btnLogoutUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogoutUserActionPerformed(evt);
            }
        });
        NavbarUserPanel.add(btnLogoutUser, new org.netbeans.lib.awtextra.AbsoluteConstraints(930, 10, -1, -1));

        MainUserPanel.setBackground(new java.awt.Color(255, 255, 255));
        MainUserPanel.setLayout(new java.awt.CardLayout());

        HomePanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel22.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userIcon.png"))); // NOI18N
        HomePanel.add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 120, 270, 280));

        jLabel23.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel23.setText("Silahkan melakukan transaksi penyewaan sarana olahraga sepuasnya");
        HomePanel.add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 440, -1, -1));

        lblWelcome.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblWelcome.setText("Selamat Datang User di ABC Sport");
        HomePanel.add(lblWelcome, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 410, -1, -1));

        jLabel25.setIcon(new javax.swing.ImageIcon(getClass().getResource("/elegant.jpg"))); // NOI18N
        HomePanel.add(jLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1040, 540));

        MainUserPanel.add(HomePanel, "card3");

        ListVenuesPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setText("Filter berdasarkan kategori");
        ListVenuesPanel.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 100, -1, -1));

        tblVenues.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "id", "Nama", "Deskripsi", "Jam Buka", "Jam Tutup", "Harga", "Kategori"
            }
        ));
        jScrollPane1.setViewportView(tblVenues);

        ListVenuesPanel.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 130, 1000, 390));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setText("Daftar Lapangan");
        ListVenuesPanel.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 10, -1, -1));

        cbCategory.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbCategoryItemStateChanged(evt);
            }
        });
        cbCategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbCategoryActionPerformed(evt);
            }
        });
        ListVenuesPanel.add(cbCategory, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 100, 140, -1));

        btnGotoBooking.setBackground(new java.awt.Color(0, 51, 255));
        btnGotoBooking.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnGotoBooking.setForeground(new java.awt.Color(255, 255, 255));
        btnGotoBooking.setIcon(new javax.swing.ImageIcon(getClass().getResource("/order.png"))); // NOI18N
        btnGotoBooking.setText("Pesan Lapangan Sekarang");
        btnGotoBooking.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGotoBookingActionPerformed(evt);
            }
        });
        ListVenuesPanel.add(btnGotoBooking, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 90, -1, -1));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/elegant.jpg"))); // NOI18N
        jLabel3.setText("jLabel3");
        ListVenuesPanel.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1040, 540));

        MainUserPanel.add(ListVenuesPanel, "card2");

        BookingTransactionPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setText("Halaman Pemesanan Lapangan");
        BookingTransactionPanel.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(412, 6, -1, -1));

        tblBookedList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Id Lapangan", "Nama", "Kategori", "Pemesan", "Tanggal", "Mulai", "Selesai"
            }
        ));
        jScrollPane2.setViewportView(tblBookedList);

        BookingTransactionPanel.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 300, 1020, 230));

        jLabel5.setText("Kategori");
        BookingTransactionPanel.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 50, -1, -1));

        cbCategoryInput.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbCategoryInputItemStateChanged(evt);
            }
        });
        BookingTransactionPanel.add(cbCategoryInput, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 70, 156, -1));

        jLabel6.setText("Lapangan");
        BookingTransactionPanel.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 110, -1, -1));

        cbVenue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbVenueActionPerformed(evt);
            }
        });
        BookingTransactionPanel.add(cbVenue, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 130, 156, -1));

        jLabel7.setText("Tanggal");
        BookingTransactionPanel.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 170, -1, -1));
        BookingTransactionPanel.add(txtDateBooking, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 190, 156, -1));

        jLabel8.setText("Jumlah yang harus dibayar");
        BookingTransactionPanel.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 40, 153, -1));
        BookingTransactionPanel.add(txtTotalPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 70, 152, -1));

        jLabel9.setText("Mulai");
        BookingTransactionPanel.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 100, -1, -1));

        cbStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbStartActionPerformed(evt);
            }
        });
        BookingTransactionPanel.add(cbStart, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 120, 152, -1));

        jLabel10.setText("Selesai");
        BookingTransactionPanel.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 160, -1, -1));

        cbEnd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbEndActionPerformed(evt);
            }
        });
        BookingTransactionPanel.add(cbEnd, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 180, 152, -1));

        jLabel11.setText("Upload Bukti Pembayaran");
        BookingTransactionPanel.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 50, -1, -1));
        BookingTransactionPanel.add(txtUploadPhoto, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 70, 137, -1));

        btnChoosePhoto.setText("Pilih Gambar");
        btnChoosePhoto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChoosePhotoActionPerformed(evt);
            }
        });
        BookingTransactionPanel.add(btnChoosePhoto, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 70, -1, -1));

        btnSubmit.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnSubmit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/transaction.png"))); // NOI18N
        btnSubmit.setText("Pesan Sekarang");
        btnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitActionPerformed(evt);
            }
        });
        BookingTransactionPanel.add(btnSubmit, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 170, 150, 40));

        btnAskPayment.setBackground(new java.awt.Color(255, 51, 51));
        btnAskPayment.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnAskPayment.setForeground(new java.awt.Color(255, 255, 255));
        btnAskPayment.setText("Pilihan Pembayaran ?");
        btnAskPayment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAskPaymentActionPerformed(evt);
            }
        });
        BookingTransactionPanel.add(btnAskPayment, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 60, -1, -1));
        BookingTransactionPanel.add(txtDateSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 260, 132, -1));

        jLabel12.setText("Cari tanggal");
        BookingTransactionPanel.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 260, -1, -1));

        jLabel13.setForeground(new java.awt.Color(255, 0, 0));
        jLabel13.setText("* Untuk melakukan pemesanan, Pastikan jadwal yang dipilih kosong");
        BookingTransactionPanel.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 110, -1, -1));

        cbCategorySearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbCategorySearchActionPerformed(evt);
            }
        });
        BookingTransactionPanel.add(cbCategorySearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 260, 124, -1));

        jLabel14.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel14.setText("Daftar Jadwal yang sudah terisi");
        BookingTransactionPanel.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 260, -1, -1));

        btnReset.setBackground(new java.awt.Color(255, 102, 0));
        btnReset.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnReset.setForeground(new java.awt.Color(255, 255, 255));
        btnReset.setIcon(new javax.swing.ImageIcon(getClass().getResource("/refresh.png"))); // NOI18N
        btnReset.setText("Segarkan");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });
        BookingTransactionPanel.add(btnReset, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 170, 112, 40));

        jLabel15.setForeground(new java.awt.Color(255, 0, 0));
        jLabel15.setText("* Sertakan bukti pembayaran sebelum membuat pesanan");
        BookingTransactionPanel.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 130, -1, -1));

        jLabel16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/elegant.jpg"))); // NOI18N
        jLabel16.setText("hjhj\\");
            BookingTransactionPanel.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1040, 540));

            MainUserPanel.add(BookingTransactionPanel, "card4");

            BookingStatusPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

            btnStruk.setBackground(new java.awt.Color(0, 153, 51));
            btnStruk.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
            btnStruk.setForeground(new java.awt.Color(255, 255, 255));
            btnStruk.setText("Lihat Struk");
            btnStruk.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    btnStrukActionPerformed(evt);
                }
            });
            BookingStatusPanel.add(btnStruk, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 70, 121, -1));

            tblStatusBooking.setModel(new javax.swing.table.DefaultTableModel(
                new Object [][] {
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null}
                },
                new String [] {
                    "Kode Pesanan", "Nama Lapangan", "Kategori", "Tgl Transaksi", "Tgl Pemesanan", "Mulai", "Selesai", "Status"
                }
            ));
            tblStatusBooking.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    tblStatusBookingMouseClicked(evt);
                }
            });
            jScrollPane3.setViewportView(tblStatusBooking);

            BookingStatusPanel.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 110, 1000, 410));

            jLabel17.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
            jLabel17.setText("Status Pemesanan");
            BookingStatusPanel.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(447, 6, -1, -1));

            jLabel18.setIcon(new javax.swing.ImageIcon(getClass().getResource("/elegant.jpg"))); // NOI18N
            jLabel18.setText("jLabel3");
            BookingStatusPanel.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1040, 540));

            MainUserPanel.add(BookingStatusPanel, "card5");

            ReportTransactionPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

            tblReport.setModel(new javax.swing.table.DefaultTableModel(
                new Object [][] {
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null},
                    {null, null, null, null, null, null, null, null}
                },
                new String [] {
                    "Kode Pesanan", "Nama Lapangan", "Kategori", "Tgl Transaksi", "Tgl Pemesanan", "Mulai", "Selesai", "Jumlah"
                }
            ));
            jScrollPane4.setViewportView(tblReport);

            ReportTransactionPanel.add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 160, 1010, 370));

            jLabel19.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
            jLabel19.setText("Laporan Transaksi");
            ReportTransactionPanel.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(433, 6, -1, -1));

            btnPrint.setBackground(new java.awt.Color(0, 102, 153));
            btnPrint.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
            btnPrint.setForeground(new java.awt.Color(255, 255, 255));
            btnPrint.setIcon(new javax.swing.ImageIcon(getClass().getResource("/print.png"))); // NOI18N
            btnPrint.setText("Cetak");
            btnPrint.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    btnPrintActionPerformed(evt);
                }
            });
            ReportTransactionPanel.add(btnPrint, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 80, 102, -1));

            cbYear.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2023", "2024", "2025", "2026", "2027", "2028", "2029", "2030", "2031", "2032", "2033", "2034", "2035" }));
            cbYear.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    cbYearActionPerformed(evt);
                }
            });
            ReportTransactionPanel.add(cbYear, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 130, 93, -1));

            cbMonth.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pilih Bulan", "Januari", "Februari", "Maret", "April", "Mei", "Juni", "Juli", "Agustus", "September", "Oktober", "November", "Desember" }));
            cbMonth.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    cbMonthActionPerformed(evt);
                }
            });
            ReportTransactionPanel.add(cbMonth, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 130, 110, -1));

            jLabel20.setText("Cari berdasarkan");
            ReportTransactionPanel.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 130, -1, -1));

            jLabel21.setIcon(new javax.swing.ImageIcon(getClass().getResource("/elegant.jpg"))); // NOI18N
            ReportTransactionPanel.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1040, 540));

            MainUserPanel.add(ReportTransactionPanel, "card6");

            javax.swing.GroupLayout BodyPanelUserLayout = new javax.swing.GroupLayout(BodyPanelUser);
            BodyPanelUser.setLayout(BodyPanelUserLayout);
            BodyPanelUserLayout.setHorizontalGroup(
                BodyPanelUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(NavbarUserPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(MainUserPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            );
            BodyPanelUserLayout.setVerticalGroup(
                BodyPanelUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(BodyPanelUserLayout.createSequentialGroup()
                    .addComponent(NavbarUserPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(MainUserPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            );

            javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
            getContentPane().setLayout(layout);
            layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(BodyPanelUser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            );
            layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(BodyPanelUser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            );

            pack();
            setLocationRelativeTo(null);
        }// </editor-fold>//GEN-END:initComponents

    // ============================= HOME PANEL =============================
    private void btnHomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHomeActionPerformed
        // TODO add your handling code here:
        btnHome.setBackground(Color.red);
        btnSeeVenues.setBackground(null);
        MainUserPanel.removeAll();
        MainUserPanel.repaint();
        MainUserPanel.revalidate();

        MainUserPanel.add(HomePanel);
        MainUserPanel.repaint();
        MainUserPanel.revalidate();

    }//GEN-LAST:event_btnHomeActionPerformed
// ############################## END HOME PANEL ########################################

    // =========================== List Venues =================================
    private void listVenuesContainer(){
        fillComboBoxCategory();
    }
    private void btnSeeVenuesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSeeVenuesActionPerformed
        // TODO add your handling code here:
        btnSeeVenues.setBackground(Color.red);
        btnHome.setBackground(null);
        MainUserPanel.removeAll();
        MainUserPanel.repaint();
        MainUserPanel.revalidate();

        MainUserPanel.add(ListVenuesPanel);
        MainUserPanel.repaint();
        MainUserPanel.revalidate();

    }//GEN-LAST:event_btnSeeVenuesActionPerformed
    private void readVenuesTable() {
        DefaultTableModel model = (DefaultTableModel) tblVenues.getModel();
        int x = 0;
        List<VenueResponse> venues = null;

        String category = (String) cbCategory.getSelectedItem();
        if (category.equals("Semua")) {
            venues = venueController.findVenuesWhereActive();
        } else {
            Category categoryByName = categoryController.findCategoryByName(category);
            venues = venueController.findVenueByCategory(categoryByName.getName());
        }

        model.setRowCount(venues.size());
        for (VenueResponse venue : venues) {
            model.setValueAt(venue.getId(), x, 0);
            model.setValueAt(venue.getName(), x, 1);
            model.setValueAt(venue.getDescription(), x, 2);
            model.setValueAt(venue.getOpen(), x, 3);
            model.setValueAt(venue.getClose(), x, 4);
            model.setValueAt(venue.getPrice(), x, 5);
            model.setValueAt(venue.getCategory(), x, 6);
            x++;
        }
    }
    private void fillComboBoxCategory(){
        List<Category> categories = new ArrayList<Category>();
        categories = categoryController.findAllCategories();
        cbCategory.addItem("Semua");
        for (Category category : categories) {
            cbCategory.addItem(category.getName());
        }
    }
    private void cbCategoryItemStateChanged(java.awt.event.ItemEvent evt) {
        // TODO add your handling code here:
        readVenuesTable();
    }
    private void btnGotoBookingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGotoBookingActionPerformed
        // TODO add your handling code here:
        MainUserPanel.removeAll();
        MainUserPanel.repaint();
        MainUserPanel.revalidate();

        MainUserPanel.add(BookingTransactionPanel);
        MainUserPanel.repaint();
        MainUserPanel.revalidate();
    }//GEN-LAST:event_btnGotoBookingActionPerformed
// ##################################### END LIST VENUES ################################

    // ======================================== Create Transaction ==========================================
    private void createTransactionContainer(){
        fillCbCategoriesBookingTransactionSearch();
        fillCbCategoriesBookingTransaction();
        fillCbTime();
        readTableBookingTransaction();
        txtTotalPrice.setEditable(false);
        txtUploadPhoto.setEditable(false);
    }
    private void btnCreateBookingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateBookingActionPerformed
        // TODO add your handling code here:
        MainUserPanel.removeAll();
        MainUserPanel.repaint();
        MainUserPanel.revalidate();

        MainUserPanel.add(BookingTransactionPanel);
        MainUserPanel.repaint();
        MainUserPanel.revalidate();
    }//GEN-LAST:event_btnCreateBookingActionPerformed
    private void fillCbCategoriesBookingTransaction(){
        final List<Category> allCategories = categoryController.findAllCategories();

        cbCategoryInput.addItem("Pilih Kategori");
        for (Category allCategory : allCategories) {
            cbCategoryInput.addItem(allCategory.getName());
        }
    }
    private void fillCbCategoriesBookingTransactionSearch(){
        final List<Category> allCategories = categoryController.findAllCategories();

        cbCategorySearch.addItem("Semua");
        for (Category allCategory : allCategories) {
            cbCategorySearch.addItem(allCategory.getName());
        }
    }
    private void fillCbVenues(){
        List<VenueResponse> allVenues = null;
        String category = (String) cbCategoryInput.getSelectedItem();

        if (cbCategoryInput.getSelectedItem().equals("Pilih Kategori")){
            cbVenue.removeAllItems();
            cbVenue.addItem("Pilih Lapangan");
            allVenues = venueController.findAllVenues();
            for (VenueResponse allVenue : allVenues) {
                cbVenue.addItem(allVenue.getName());
            }
        }
    }
    private void fillCbTime(){
        List<String> venueList = venueController.findRandomTime();
        String venueName = (String) cbVenue.getSelectedItem();

        if (cbVenue.getSelectedItem().equals("Pilih Lapangan")){
            cbStart.removeAllItems();
            cbEnd.removeAllItems();
            for (String s : venueList) {
                cbStart.addItem(s);
                cbEnd.addItem(s);
            }
        }
    }
    private void updatePrice(){
        String venId = venueId();
        long l = bookingController.fillPrice(start, end, venId);
        txtTotalPrice.setText(String.valueOf(l));
    }
    private String venueId(){
        Venue venueByName = venueController.findVenueByName(venueName);
        if (venueByName == null){
            return "";
        }
        return venueByName.getId();
    }
    private void uploadPhoto(){
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.showOpenDialog(null);
        File file = fileChooser.getSelectedFile();
        String imageUrl = file.toString();
        txtUploadPhoto.setText(imageUrl);
        this.fileName = file.getAbsolutePath();
    }
    private void createBooking(){
        if (!cbCategoryInput.getSelectedItem().equals("Pilih Kategori") && !cbVenue.getSelectedItem().equals("Pilih Lapangan") &&
                txtDateBooking.getDate() != null && !cbStart.getSelectedItem().equals(cbEnd.getSelectedItem()) && !txtUploadPhoto.getText().equals("") &&
                !txtUploadPhoto.getText().equals("") && !txtTotalPrice.getText().equals("")){

            String userId = txtUserId.getText();
            String venueId = venueId();
            Date date = txtDateBooking.getDate();
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            String dateBooked = sdf.format(date);
            Time start = Time.valueOf(cbStart.getSelectedItem().toString());
            Time end = Time.valueOf(cbEnd.getSelectedItem().toString());
            long price = Long.parseLong(txtTotalPrice.getText());
            String imageUrl = fileName;
            bookingController.createBooking(new BookingRequest(userId, venueId, dateBooked, start, end, price, imageUrl));
            JOptionPane.showMessageDialog(this, "Berhasil membuat pesanan, tunggu konfirmasi admin");
            resetBookingTransaction();
            return;
        }
        JOptionPane.showMessageDialog(null, "Maaf, mohon lengkapi form transaksi terlebih dahulu", "Invalid input", JOptionPane.WARNING_MESSAGE);
    }
    private void resetBookingTransaction(){
        txtUploadPhoto.setText("");
        txtDateBooking.setDate(null);
        txtDateSearch.setDate(null);
        txtTotalPrice.setText("");
        cbVenue.setSelectedItem("Pilih Lapangan");
        cbCategoryInput.setSelectedItem("Pilih Kategori");
        cbCategorySearch.setSelectedItem("Semua");
    }
    private void readTableBookingTransaction() {
        DefaultTableModel model = (DefaultTableModel) tblBookedList.getModel();
        int row = 0;

        List<BookedVenuesResponse> venues = null;
        if (txtDateSearch.getDate() != null && !cbCategorySearch.getSelectedItem().equals("Semua")){
            Date date = txtDateSearch.getDate();
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            String dateString = sdf.format(date);
            venues = bookingController.findBookedVenuesByDateCategory(dateString, cbCategorySearch.getSelectedItem().toString());
        } else if(txtDateSearch.getDate() != null && cbCategorySearch.getSelectedItem().equals("Semua")){
            Date date = txtDateSearch.getDate();
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            String dateString = sdf.format(date);
            venues = bookingController.findBookedVenuesByDate(dateString);
        } else if(txtDateSearch.getDate() == null && !cbCategorySearch.getSelectedItem().equals("Semua")){
            venues = bookingController.findBookedVenuesByCategory(cbCategorySearch.getSelectedItem().toString());
        } else {
            venues = bookingController.findBookedVenues();
        }

        model.setRowCount(venues.size());
        for (BookedVenuesResponse venue : venues) {
            String email = venue.getUserEmail();
            String subs = email.substring(0, 4);
            String userEmail = subs + "**********";
            model.setValueAt(venue.getVenueId(), row, 0);
            model.setValueAt(venue.getVenueName(), row, 1);
            model.setValueAt(venue.getVenueCategory(), row, 2);
            model.setValueAt(userEmail, row, 3);
            model.setValueAt(venue.getDateBooked(), row, 4);
            model.setValueAt(venue.getStartTime(), row, 5);
            model.setValueAt(venue.getEndTime(), row, 6);
            row++;
        }
    }
    private void cbCategoryInputItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbCategoryInputItemStateChanged
        // TODO add your handling code here:
        List<VenueResponse> allVenues = null;
        String category = (String) cbCategoryInput.getSelectedItem();

        if (!cbCategoryInput.getSelectedItem().equals("Pilih Kategori")){
            cbVenue.removeAllItems();
            cbVenue.addItem("Pilih Lapangan");
            allVenues = venueController.findVenueByCategory(category);
            for (VenueResponse allVenue : allVenues) {
                cbVenue.addItem(allVenue.getName());
            }
        }
        fillCbVenues();
    }//GEN-LAST:event_cbCategoryInputItemStateChanged

    private void cbVenueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbVenueActionPerformed
        // TODO add your handling code here:
        venueName = (String) cbVenue.getSelectedItem();
        venueId();
    }//GEN-LAST:event_cbVenueActionPerformed

    private void cbStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbStartActionPerformed
        // TODO add your handling code here:
        start = Time.valueOf((String) cbStart.getSelectedItem());
        updatePrice();
    }//GEN-LAST:event_cbStartActionPerformed

    private void cbEndActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbEndActionPerformed
        // TODO add your handling code here:
        end = Time.valueOf((String) cbEnd.getSelectedItem());
        updatePrice();
    }//GEN-LAST:event_cbEndActionPerformed

    private void btnChoosePhotoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChoosePhotoActionPerformed
        // TODO add your handling code here:
        uploadPhoto();
    }//GEN-LAST:event_btnChoosePhotoActionPerformed

    private void btnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitActionPerformed
        // TODO add your handling code here:
        createBooking();
    }//GEN-LAST:event_btnSubmitActionPerformed

    private void cbCategorySearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbCategorySearchActionPerformed
        // TODO add your handling code here:
        readTableBookingTransaction();
    }//GEN-LAST:event_cbCategorySearchActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        // TODO add your handling code here:
        resetBookingTransaction();
    }//GEN-LAST:event_btnResetActionPerformed
// ############################################## END CREATE BOOKING ################################################


    // ========================================== See Status ===========================================
    private void bookingStatusContainer(){
        readTableBookingStatus();
    }
    private void btnSeeStatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSeeStatusActionPerformed
        // TODO add your handling code here:
        MainUserPanel.removeAll();
        MainUserPanel.repaint();
        MainUserPanel.revalidate();

        MainUserPanel.add(BookingStatusPanel);
        MainUserPanel.repaint();
        MainUserPanel.revalidate();
        readTableBookingStatus();
    }//GEN-LAST:event_btnSeeStatusActionPerformed
    private void readTableBookingStatus(){
        DefaultTableModel model = (DefaultTableModel) tblStatusBooking.getModel();
        int row = 0;
        this.userId = txtUserId.getText();
        List<BookingStatusDetail> bookingStatus = bookingController.findBookingStatus(userId);

        model.setRowCount(bookingStatus.size());
        for (BookingStatusDetail status : bookingStatus) {
            model.setValueAt(status.getId(), row, 0);
            model.setValueAt(status.getName(), row, 1);
            model.setValueAt(status.getCategory(), row, 2);
            model.setValueAt(status.getDateOrder(), row, 3);
            model.setValueAt(status.getDateBooked(), row, 4);
            model.setValueAt(status.getStartTime(), row, 5);
            model.setValueAt(status.getEndTime(), row, 6);
            model.setValueAt(status.getStatus(), row, 7);
            row++;
        }
    }
    private void btnStrukActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStrukActionPerformed
        // TODO add your handling code here:
        int row = tblStatusBooking.getSelectedRow();
        if (bookingKode == null){
            JOptionPane.showMessageDialog(null, "Pilih data pada tabel terlebih dahulu");
            return;
        } else {
            new BookingStrukView(bookingKode).setVisible(true);
        }
    }//GEN-LAST:event_btnStrukActionPerformed

    private void tblStatusBookingMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblStatusBookingMouseClicked
        // TODO add your handling code here:
        int row = tblStatusBooking.getSelectedRow();
        bookingKode = tblStatusBooking.getValueAt(row, 0).toString();
    }//GEN-LAST:event_tblStatusBookingMouseClicked
// ################################################## END SEE STATUS ##########################################

    // ========================================= Report Transaction =======================================
    private void btnReportTransactionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReportTransactionActionPerformed
        // TODO add your handling code here:
        MainUserPanel.removeAll();
        MainUserPanel.repaint();
        MainUserPanel.revalidate();

        MainUserPanel.add(ReportTransactionPanel);
        MainUserPanel.repaint();
        MainUserPanel.revalidate();
        readTableReportTransaction();
    }//GEN-LAST:event_btnReportTransactionActionPerformed

    private void readTableReportTransaction(){
        DefaultTableModel model = (DefaultTableModel) tblReport.getModel();
        int row = 0;
        List<BookingDetail> reports = null;
        this.userId = txtUserId.getText();

        String monthCb = (String) cbMonth.getSelectedItem();
        String yearCb = (String) cbYear.getSelectedItem();

        int year = Integer.parseInt(yearCb);
        int month = 0;
        switch (monthCb){
            case "Januari" : month = 1; break;
            case "Februari" : month = 2; break;
            case "Maret" : month = 3; break;
            case "April" : month = 4; break;
            case "Mei" : month = 5; break;
            case "Juni" : month = 6; break;
            case "Juli" : month = 7; break;
            case "Agustus" : month = 8; break;
            case "September" : month = 9; break;
            case "Oktober" : month = 10; break;
            case "November" : month = 11; break;
            case "Desember" : month = 12; break;
        }

        if (cbMonth.getSelectedItem().equals("Pilih Bulan")){
            reports = bookingController.userHistoriesSuccessByYear(this.userId, year);
        } else {
            reports = bookingController.userHistoriesSuccessByDate(this.userId, month, year);
        }

        model.setRowCount(reports.size());
        for (BookingDetail report : reports) {
            model.setValueAt(report.getBookedId(), row, 0);
            model.setValueAt(report.getVenueName(), row, 1);
            model.setValueAt(report.getCategory(), row, 2);
            model.setValueAt(report.getDateOrder(), row, 3);
            model.setValueAt(report.getDateBooked(), row, 4);
            model.setValueAt(report.getStartTime(), row, 5);
            model.setValueAt(report.getEndTime(), row, 6);
            model.setValueAt(report.getPrice(), row, 7);
            row++;
        }
    }

    private void cbYearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbYearActionPerformed
        // TODO add your handling code here:
        readTableReportTransaction();
    }//GEN-LAST:event_cbYearActionPerformed

    private void cbMonthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbMonthActionPerformed
        // TODO add your handling code here:
        readTableReportTransaction();
    }//GEN-LAST:event_cbMonthActionPerformed

    private void btnLogoutUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogoutUserActionPerformed
        // TODO add your handling code here:
        int i = JOptionPane.showConfirmDialog(null, "Anda yakin ingin keluar ?");
        if (i == JOptionPane.YES_OPTION){
            this.setVisible(false);
            new LoginUserView().setVisible(true);
        }
    }//GEN-LAST:event_btnLogoutUserActionPerformed

    private void cbCategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbCategoryActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbCategoryActionPerformed

    private void btnAskPaymentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAskPaymentActionPerformed
        // TODO add your handling code here:
        new PaymentChooseView().setVisible(true);
    }//GEN-LAST:event_btnAskPaymentActionPerformed

    private void btnPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrintActionPerformed
        // TODO add your handling code here:
        if (!cbMonth.getSelectedItem().equals("Pilih Bulan")) {

            String monthCb = (String) cbMonth.getSelectedItem();
            String yearCb = (String) cbYear.getSelectedItem();

            int year = Integer.parseInt(yearCb);
            int month = 0;
            switch (monthCb){
                case "Januari" : month = 1; break;
                case "Februari" : month = 2; break;
                case "Maret" : month = 3; break;
                case "April" : month = 4; break;
                case "Mei" : month = 5; break;
                case "Juni" : month = 6; break;
                case "Juli" : month = 7; break;
                case "Agustus" : month = 8; break;
                case "September" : month = 9; break;
                case "Oktober" : month = 10; break;
                case "November" : month = 11; break;
                case "Desember" : month = 12; break;
            }

            HashMap params = new HashMap<>();
            params.put("userId", txtUserId.getText());
            params.put("month", month);
            params.put("year", year);

            reportService.print("report_transaksiUser.jasper", params);
            return;
        }
        throw new WarningException("Pilih periode bulan terlebih dahulu!");
    }//GEN-LAST:event_btnPrintActionPerformed
    // ################################################# END REPORT STATUS ##############################################

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UserView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UserView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UserView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UserView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UserView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel BodyPanelUser;
    private javax.swing.JPanel BookingStatusPanel;
    private javax.swing.JPanel BookingTransactionPanel;
    private javax.swing.JPanel HomePanel;
    private javax.swing.JPanel ListVenuesPanel;
    private javax.swing.JPanel MainUserPanel;
    private javax.swing.JPanel NavbarUserPanel;
    private javax.swing.JPanel ReportTransactionPanel;
    private javax.swing.JButton btnAskPayment;
    private javax.swing.JButton btnChoosePhoto;
    private javax.swing.JButton btnCreateBooking;
    private javax.swing.JButton btnGotoBooking;
    private javax.swing.JButton btnHome;
    private javax.swing.JButton btnLogoutUser;
    private javax.swing.JButton btnPrint;
    private javax.swing.JButton btnReportTransaction;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnSeeStatus;
    private javax.swing.JButton btnSeeVenues;
    private javax.swing.JButton btnStruk;
    private javax.swing.JButton btnSubmit;
    private javax.swing.JComboBox<String> cbCategory;
    private javax.swing.JComboBox<String> cbCategoryInput;
    private javax.swing.JComboBox<String> cbCategorySearch;
    private javax.swing.JComboBox<String> cbEnd;
    private javax.swing.JComboBox<String> cbMonth;
    private javax.swing.JComboBox<String> cbStart;
    private javax.swing.JComboBox<String> cbVenue;
    private javax.swing.JComboBox<String> cbYear;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    public javax.swing.JLabel lblWelcome;
    private javax.swing.JTable tblBookedList;
    private javax.swing.JTable tblReport;
    private javax.swing.JTable tblStatusBooking;
    private javax.swing.JTable tblVenues;
    private com.toedter.calendar.JDateChooser txtDateBooking;
    private com.toedter.calendar.JDateChooser txtDateSearch;
    private javax.swing.JTextField txtTotalPrice;
    private javax.swing.JTextField txtUploadPhoto;
    public javax.swing.JLabel txtUserId;
    public javax.swing.JLabel txtUsername;
    // End of variables declaration//GEN-END:variables
}
